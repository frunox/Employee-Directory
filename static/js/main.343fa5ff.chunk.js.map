{"version":3,"sources":["components/EmployeeList/index.js","components/EmployeeTable/index.js","components/SearchBox/index.js","components/SearchBar/index.js","utils/API.js","components/TableBody/index.js","components/Table/index.js","components/Container/index.js","components/Banner/index.js","App.js","serviceWorker.js","index.js"],"names":["EmployeeList","users","undefined","name","map","login","picture","phone","email","dob","key","uuid","data-th","className","src","medium","alt","first","last","href","target","date","dateArray","split","year","join","formatDate","EmployeeTable","headings","handleSort","id","width","style","onClick","toLowerCase","SearchBox","handleSearchChange","type","placeholder","aria-label","onChange","e","SearchBar","axios","get","TableBody","state","order","filteredUsers","heading","setState","sortedUsers","sort","a","b","localeCompare","event","console","log","value","filter","filteredList","item","Object","values","indexOf","API","then","results","data","this","Component","Table","Container","children","Banner","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.343fa5ff.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./EmployeeList.css\";\r\n\r\nfunction EmployeeList({ users }) {\r\n    function formatDate(date) {\r\n        const dateArray = date.split(\"-\");\r\n        const year = dateArray[0];\r\n        const month = dateArray[1];\r\n        const dayArray = dateArray[2].split(\"T\");\r\n        const day = dayArray[0];\r\n        const formattedDate = [month, day, year].join(\"-\");\r\n        return formattedDate;\r\n    }\r\n\r\n    return (\r\n        <tbody>\r\n            {users[0] !== undefined && users[0].name !== undefined ? (\r\n                users.map(({ login, name, picture, phone, email, dob }) => {\r\n                    return (\r\n                        <tr key={login.uuid}>\r\n                            <td data-th=\"Image\" className=\"align-middle\">\r\n                                <img\r\n                                    src={picture.medium}\r\n                                    alt={\"profile image for \" + name.first + \" \" + name.last}\r\n                                    className=\"img-responsive\"\r\n                                />\r\n                            </td>\r\n                            <td data-th=\"Name\" className=\"name-cell align-middle\">\r\n                                {name.first} {name.last}\r\n                            </td>\r\n                            <td data-th=\"Phone\" className=\"align-middle\">\r\n                                {phone}\r\n                            </td>\r\n                            <td data-th=\"Email\" className=\"align-middle\">\r\n                                <a href={\"mailto:\" + email} target=\"__blank\">\r\n                                    {email}\r\n                                </a>\r\n                            </td>\r\n                            <td data-th=\"DOB\" className=\"align-middle\">\r\n                                {formatDate(dob.date)}\r\n                            </td>\r\n                        </tr>\r\n                    );\r\n                })\r\n            ) : (\r\n                    <></>\r\n                )}\r\n        </tbody>\r\n    );\r\n}\r\n\r\nexport default EmployeeList;\r\n","import React from \"react\";\r\nimport EmployeeList from \"../EmployeeList\";\r\nimport \"./EmployeeTable.css\";\r\n\r\nfunction EmployeeTable({ headings, users, handleSort }) {\r\n    return (\r\n        <div className=\"datatable mt-5\">\r\n            <table\r\n                id=\"table\"\r\n                className=\"table table-striped table-hover table-condensed\"\r\n            >\r\n                <thead>\r\n                    <tr>\r\n                        {headings.map(({ name, width }) => {\r\n                            return (\r\n                                <th\r\n                                    className=\"col\"\r\n                                    key={name}\r\n                                    style={{ width }}\r\n                                    onClick={() => {\r\n                                        handleSort(name.toLowerCase());\r\n                                    }}\r\n                                >\r\n                                    {name}\r\n                                    <span className=\"pointer\"></span>\r\n                                </th>\r\n                            );\r\n                        })}\r\n                    </tr>\r\n                </thead>\r\n\r\n                <EmployeeList users={users} />\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EmployeeTable;\r\n","import React from \"react\";\r\nimport \"./SearchBox.css\";\r\n\r\nfunction SearchBox({ handleSearchChange }) {\r\n    return (\r\n        <div className=\"searchbox\">\r\n            <form className=\"form-inline\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    type=\"search\"\r\n                    placeholder=\"Search\"\r\n                    aria-label=\"Search\"\r\n                    onChange={e => handleSearchChange(e)}\r\n                />\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport SearchBox from \"../SearchBox\";\r\nimport \"./SearchBar.css\";\r\n\r\nfunction SearchBar({ handleSearchChange }) {\r\n    return (\r\n        <nav className=\"navbar navbar-expand navbar-light bg-light\">\r\n            <div className=\"navbar-collapse row\" id=\"navbarNav\">\r\n                <SearchBox handleSearchChange={handleSearchChange} />\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\nexport default SearchBar;\r\n","import axios from \"axios\";\n\nexport default {\n  // Gets all users\n  getUsers: function() {\n    return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\n  }\n};\n","import React, { Component } from \"react\";\r\nimport EmployeeTable from \"../EmployeeTable\";\r\nimport SearchBar from \"../SearchBar\";\r\nimport API from \"../../utils/API\";\r\nimport \"./TableBody.css\";\r\n\r\nexport default class TableBody extends Component {\r\n    state = {\r\n        users: [{}],\r\n        order: \"descend\",\r\n        filteredUsers: [{}]\r\n    }\r\n\r\n    headings = [\r\n        { name: \"Image\", width: \"10%\" },\r\n        { name: \"Name\", width: \"10%\" },\r\n        { name: \"Phone\", width: \"20%\" },\r\n        { name: \"Email\", width: \"20%\" },\r\n        { name: \"DOB\", width: \"10%\" }\r\n    ]\r\n\r\n    handleSort = heading => {\r\n        if (this.state.order === \"descend\") {\r\n            this.setState({\r\n                order: \"ascend\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                order: \"descend\"\r\n            })\r\n        }\r\n\r\n        const compareFnc = (a, b) => {\r\n            if (this.state.order === \"ascend\") {\r\n                // account for missing values\r\n                if (a[heading] === undefined) {\r\n                    return 1;\r\n                } else if (b[heading] === undefined) {\r\n                    return -1;\r\n                }\r\n                // numerically\r\n                else if (heading === \"name\") {\r\n                    return a[heading].first.localeCompare(b[heading].first);\r\n                } else {\r\n                    return a[heading] - b[heading];\r\n                }\r\n            } else {\r\n                // account for missing values\r\n                if (a[heading] === undefined) {\r\n                    return 1;\r\n                } else if (b[heading] === undefined) {\r\n                    return -1;\r\n                }\r\n                // numerically\r\n                else if (heading === \"name\") {\r\n                    return b[heading].first.localeCompare(a[heading].first);\r\n                } else {\r\n                    return b[heading] - a[heading];\r\n                }\r\n            }\r\n\r\n        }\r\n        const sortedUsers = this.state.filteredUsers.sort(compareFnc);\r\n        this.setState({ filteredUsers: sortedUsers });\r\n    }\r\n\r\n    handleSearchChange = event => {\r\n        console.log(event.target.value);\r\n        const filter = event.target.value;\r\n        const filteredList = this.state.users.filter(item => {\r\n            // merge data together, then see if user input is anywhere inside\r\n            let values = Object.values(item)\r\n                .join(\"\")\r\n                .toLowerCase();\r\n            return values.indexOf(filter.toLowerCase()) !== -1;\r\n        });\r\n        this.setState({ filteredUsers: filteredList });\r\n    }\r\n\r\n    componentDidMount() {\r\n        API.getUsers().then(results => {\r\n            this.setState({\r\n                users: results.data.results,\r\n                filteredUsers: results.data.results\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <SearchBar handleSearchChange={this.handleSearchChange} />\r\n                <div className=\"data-area\">\r\n                    <EmployeeTable\r\n                        headings={this.headings}\r\n                        users={this.state.filteredUsers}\r\n                        handleSort={this.handleSort}\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TableBody from \"../TableBody\";\r\nimport \"./Table.css\";\r\n\r\nexport default class Table extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <TableBody />\r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport \"./Container.css\"\r\nfunction Container({ children }) {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Container;","import React, { Component } from 'react';\r\nimport \"./Banner.css\";\r\n\r\nexport default class Banner extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <h1>Employee Directory</h1>\r\n                <p>Click on carrots to filter by heading or use the search box to narrow your results.</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\nimport Table from \"./components/Table\";\nimport Container from \"./components/Container\";\nimport Banner from \"./components/Banner\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container>\n        <Banner />\n        <Table />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}